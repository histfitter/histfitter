stages:
  - build
  - test

lint-python:
  stage: build
  image:
    name: python:3.7
  except:
    - tags
  before_script:
    - python -m pip install --no-cache-dir pre-commit
  script:
    - pre-commit install
    - pre-commit run --all-files || git diff --exit-code

build-latest-image:
  stage: build
  except:
  - tags
  variables:
    IMAGE_DESTINATION: "${CI_REGISTRY_IMAGE}:latest"
  image:
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}"
                       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
                       --destination "${IMAGE_DESTINATION}"
    - echo "Image pushed successfully to ${IMAGE_DESTINATION}"

build-tagged-image:
  stage: build
  only:
  - tags
  variables:
    IMAGE_DESTINATION: "${CI_REGISTRY_IMAGE}:$CI_COMMIT_TAG"
  image:
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}"
                       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
                       --destination "${IMAGE_DESTINATION}"
    - echo "Image pushed successfully to ${IMAGE_DESTINATION}"

test:
  stage: test
  image:
    name: $CI_REGISTRY_IMAGE:latest
    entrypoint: [""]
  except:
    - tags
  before_script:
    - python -m pip install "pytest~=6.2"
    - cd /usr/local/HistFitter
    - . setup.sh
    - printenv
  script:
    - python -m pytest test
